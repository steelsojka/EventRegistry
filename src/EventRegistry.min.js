/**
 * EventRegistry.js v1.0.1
 * @author Steven Sojka
 *
 * This module extends EventEmitter.js to allow event binding to
 * classes or objects and register them to a specific event emitter.
 *
 * https://github.com/steelsojka/EventRegistry
 *
 * - Licensed under the MIT license
 **/
(function(h,a){var e;e="extend"in a?a.extend():f({},a.prototype);e.register=function(b){var d=this,c={on:function(b,c,a,e){d.on.call(d,b,c,a||this,e)},emit:function(){d.emit.apply(d,arguments)},once:function(b,c,a){d.once.call(d,b,c,a)},off:function(b,c,a){d.off.call(d,b,c,a||this)}};c.addListener=c.on;c.removeListener=c.off;if("[object Array]"===Object.prototype.toString.apply(b))for(var a=b.length-1;0<=a;a--)g(b[a],c);else g(b,c);return this};a.prototype=e;var g=function(b,a){"function"===typeof b?
b.prototype=f(b.prototype,a):"object"===typeof b&&f(b,a)},f=function(b,a){for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b};h.EventEmitter=a})(this,EventEmitter);